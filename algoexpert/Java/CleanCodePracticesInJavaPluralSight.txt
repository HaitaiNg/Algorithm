An enum cannot be extended.
Inheritance means specialization and there is an "is a relationship"; an
instance of the subclass is an instance of the superclass.
Why is Java's serialization mechanism not very suited for long-term
storage of data?
There is a strong coupling between the source code of a class and
serialized objects of that class; there are many
ways in which you can change the class in such a way
that previously serialized objects that cannot be
deserialized anymore.
Which of the following relationships between class A and B
needs to be fulfilled in order to decide that B extends A?
B is-A A
Effective way to deal with deadlocks in a java program?
Whenever it is necessary to obtain a lock on a resource,
never allow the thread to wait for the resource to
be available, always attempt to acquire the lock
with a timeout, and make sure that the program handles the situation
when a timeout occurs correctly.
A bad code smell in the code which will indicate to pull up a field
or a method is that: the same code structure is duplicated in two
or more sub-classes of the same class

Which of the following declarations is the most flexible?
(the one that will involve the smallest number of changes through
the code if changed at a later time)?
List<String> list = new ArrayList<>();

A finalizer in Java is called when an object is about to get
garbage collected.

A bad code smell in the code that will indicate to extract a super
class is that: methods in different classes do the same thing
but have different signatures

A memory leak in java can be immediately detected by the compiler
Minimizing the accessibility of members is related to the Object
Oriented Programming characteristic: encapsulation

Which of the following stream methods has a parameter a lambda
expression that encapsulates conditional logic? filter

According to the interface segregation principle, it is better to
split interfaces with many methods into smaller interfaces with
fewer methods. What is the main benefit of this?
This makes it so that the code that uses or implements to the interface
does not need to deal with methods in the interface that are
not relevant to it, which makes the code easier to understand, maintain,
and refactor.

A class is a blue print from which objects are created, it specifies
the structure and behavior of objects that are created from the class.
An object holds the actual values of the member variables in memory. A
variable is a reference to an object in memory, which allows the code to
access the object

A benefit of type-safe collections is that particular errors
are already detected at compile-time instead of run time

Which of the following stream reduction operations put the values
in a container? Collectors.groupBy

What happens if you do not provide a constructor in a Java class named
ExampleClass, and how can you create objects from such a class?
The java compiler will automatically add a no-arguments constructor
to the class, so you can create the objects using (new ExampleClass())

Member variables that are static belong to the class rather than to
instances of the class; there is only one copy of the variable that
is shared between all instances. For non-static member variables, there
is a separate copy for every instance of the class
