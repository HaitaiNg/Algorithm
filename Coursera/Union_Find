Dynamic-Connectivity
Quick Find -> O(n^2) 
Union too expensive (N Array accesses) 

Quadratic Algorithms do not scale with technology
New computer may be 10x faster and have 10x memory,
but the problem to be solved could be 10x larger. 
 
 Quick Union is too slow (Lazy Approach)
 Uses an array of size N 
 Trees can get tall and N array accesses can get expensive 
Weighted Quick Union with path compression 
Hopcroft-Ulman 


Quick-Find : M N 
Quick-Union : M N 
Weighted QU : N + M log N 
QU + path compression : N + M log N 
Weighted QW + path compression : N + M lg N 

*Least Common ancestor
Kruska's minimum spanning tree algorithm 
Monte Carlo Simulation

Path Compression: Calculate all associations
Move all nodes and flatten out the tree (take child nodes and point to the master root node)
