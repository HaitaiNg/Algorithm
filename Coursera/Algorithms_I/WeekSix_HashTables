Hash Function: method for computing array index from key 
Ideally: Each table index has its own key 

In Java, hashCode() returns a 32 bit number.
For Strings we can use Horner's method for hashing 

//Integer
public final class Integer{
    private final int value 
    ....
    public int hashCode(){return value;}
}

//Double 
public final class Double{
    private final double value
    ...
    public int hashCode()
    {
        long bits = doubleToLongBits(value); 
        return (int) (bits^ (bits >>> 32)); 
    }
}

public final class Boolean {
    private final boolean value 
    ...
    public int hashCode()
    {
        if(value) return 1231;
        else return 1237; 
    }
}

Hash Code Design 
-Use the whole key to compute the hash code 
-Combine each significant field using 31x + y rule 
-If field is primitive type, use wrapper type hashCode() 
-If field is null, return 0 
-If field is a reference type, use hashCode() 
-If field is an array, apply to each entry 

How to handle collisons? 

Separate chaining: use an array of M < N linked lists 
-Hash: map key to integer i between 0 and M - 1 
-Insert: put at front of ith chain (if not already there) 
-Search: need to search only ith chain 

Open Addressing: when a new key collides, find next empty slot
and put it there 


Separate Chaining vs Linear probing

 Separate Chaining:
-Easier to implement delete
-Performance degrades gracefully 
-Clustering less sensitive to poorly-designed hash function 

Linear Probing 
-Less wasted space 
-Better cache performance 

Variations of hashinng:
Two-Probe Hashing 
    -Hash to two positions, insert key in shorter of two chains 
    -reduces expected length of the longest chain to log log N 
Double Hashing 
    -Use linear probing, but skip a variable amount, not just 1 each time 
    -Effectively eliminates clustering 
    -Can allow table to become nearly full 
    -More difficult to implement delete 
Cuckoo Hashing 
    -Hash key to two positions; insert key into either position; if occupied 
    reinsert displaced key into its alternative position and (recur) 
    -Constant worst case time for search 

